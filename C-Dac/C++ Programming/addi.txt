#include<iostream>
using namespace std;
class Storage_device
{
public:
 virtual void save()=0;
};
class Pendrive:public Storage_device
{
void save()
{
	cout<<"in pd disp";
}
};
class CD:public Storage_device
{
void save()
{
	cout<<"in CD disp";
}
};
class HD:public Storage_device
{
void save()
{
	cout<<"in HD disp";
}
};
void global (Storage_device &ref)
{
	HD ob;
	try
	{
	ob=dynamic_cast<HD&>(ref);
	ref.save();
	}
	catch(bad_cast &ref1)
	{
		cout<<"\nin catch block\t"<<ref1.what()<<endl;
	}
}
void main()
{	
	HD h;
	Pendrive pd;
	CD cd;
	global(h);
	global(pd);
	global(cd);
}
/*2)Create a base class Advertisement. Declare pure virtual function “void publish()” in it. 			
Define following sub classes for this class.                       			
A) TV  b) Banner  c) NewsPaper		                                       	
in main function, create an array of pointer to "Advertisement" and store addresses of all the child classes.
now traverse through the array and check using dynamic cast , if array contains "Banner" , then only invoke "publish()" .( RTTI).*/

#include<iostream>
using namespace std;
class Advertisement
{
public:
	virtual void publish()=0;
};
class Tv:public Advertisement
{
public:
	void publish()
	{
		cout<<"Tv hai kya tere paas!"<<endl;
	}
};
class Banner:public Advertisement
{
public:
	void publish()
	{
		cout<<"Banner pe kya tera naam aaega bhikari!"<<endl;
	}
};
class Newspaper:public Advertisement
{
public:
	void publish()
	{
		cout<<"Newspaper padhega bhikari!"<<endl;		
	}
};
void main()
{
	Tv t;
	Banner b;
	Newspaper n;
	Advertisement *ptr[3];
	ptr[0]=new Tv;
	ptr[1]=new Banner;
	ptr[2]=new Newspaper;
	for(int i=0;i<3;i++)
	{
		if(dynamic_cast<Banner*>(ptr[i]))
		{
			ptr[i]->publish();
		}
	}
}

/*3) Define a class "Player" with following members
	int id;
	char *name;
	char *country
	int score
	in the main function, u should be able to say	
	Player p1(1,"sachin","india",200);
	cout<<p1<<endl;
	p1.disp();
	Player p2=p1;	
	cout<<p2<<endl;
	Player p3;
	p3=p1;*/

#include<iostream>
#include<string.h>
using namespace std;
class player
{private:
int id;
	char *name;
	char *country;
	int score;
public:
	player()
	{
		name=NULL;
		country=NULL;
	}
	player(int a,char *str1,char *str2,int b)
	{
		name=new char[strlen(str1)+1];
		strcpy(name,str1);
		country=new char[strlen(str2)+1];
		strcpy(country,str2);
		id=a;
		score=b;
	}
	void display()
	{
		cout<<id<<endl;
		cout<<name<<endl;
		cout<<country<<endl<<score<<endl;
	}
	player(player &m)
	{ 
		id=m.id;
		name=new char[strlen(m.name)+1];
		strcpy(name,m.name);
		country=new char[strlen(m.country)+1];
		strcpy(country,m.country);
		score=m.score;	
		
	}
	~player()
	{ if(name!=NULL)
		delete []name;
	if(country!=NULL)
		delete []country;
		cout<<"inside destructor"<<endl;
	}

	friend ostream& operator<<(ostream &,player &);
	//friend istream& operator>>(istream &,player &);
	
    void operator=(player &n)
	{
		id=n.id;
		name=new char[strlen(n.name)+1];
		strcpy(name,n.name);
		country=new char[strlen(n.country)+1];
		strcpy(country,n.country);
		score=n.score;	
		
	}

};
ostream& operator<<(ostream &o,player &ref)
	{
		o<<ref.id<<endl<<ref.name<<endl<<ref.country<<endl<<ref.score;
		return o;
	}
/* istream& operator>>(istream &i,player &p)
 {
	 i>>p.id>>p.name>>p.country>>p.score;
	 return i;
 }
*/
void main()
{
	player p1(1,"sachin","india",200);
	cout<<p1<<endl;
	p1.display();
	player p2=p1;	
	cout<<p2<<endl;
	player p3;
	p3=p1;
	//getchar();
}