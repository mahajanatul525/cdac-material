/*#include<iostream>
using namespace std;

class Number
{
	int num;

public:Number()
	   {
		   num=0;
	   }
	   Number(int num)
	   {
		   this->num=num;
	   }
	   Number operator /(Number &ref)
	   {
		   this->num=this->num/ref.num;
		   return this->num;
//		   return Number(this->num/ref.num);
	   }
	   Number operator *(Number &ref)
	   {
		   this->num=this->num*ref.num;
		   return this->num;
	//	   return Number(this->num*ref.num);
	   }
	   Number operator -(Number &ref)
	   {
		   this->num=this->num-ref.num;
		   return this->num;
		//   return Number(this->num-ref.num);
	   }
	   Number operator=(Number &ref)
	   {
		  this->num=ref.num;
		   return this->num;
		   //return Number(this->num=ref.num);
	   }
	  friend ostream& operator<<(ostream &,Number &);


};
ostream& operator<<(ostream &o,Number &ref1)
	   {
		   return o<<ref1.num;
	   }
void main()
{
	Number n1(8),n2(4),n3(20),n4(6),n5;
    n5=n1-n2*n3/n4;
	cout<<n5;
	getchar();
}*/