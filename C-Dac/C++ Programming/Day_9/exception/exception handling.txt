exception
exception is an abnormal condition which disrupts the normal programming flow.i.e when a particular exception gets raised in the program,program aborts.
In simple words exception is a runtime error.

exception handling allows you to manage runtime errors in an orderly fashion.
i.e if exception is handled properly,the program will not abort.

there are three terms used in exception
try,catch and throw

try- program statements that you want to monitor for exceptions are contained in a try block.

catch- the exception is caught using catch and processed.
catch block will execute only when the exception is raised.

throw- generates the exception specified by exception

if you throw an exception,for which there is no applicable catch statement,an abnormal program termination occur.Throwing an unhandled exception causes the standard library function terminate() to be invoked.terminate() calls abort() to stop your program.


syntax for exception handling
try
{
// possible statements
}
catch(type)
{
//statements to be processed in case of exception
}

here type can be any type i.e. built in types or user defined types.

In real world programs,most exceptions are class types rather than built in types.

The most common reason for this is that you can define a class type for an exception,is to create an object that describes the error that occured.this information can be used by the exception handler to help it process the error.
