using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;

namespace GenericDelegate
{
    // This generic delegate can call any method
    // returning void and taking a single type parameter.
    public delegate void MyGenericDelegate<T>( T arg );
    class Program
    {   static void Main( string[] args )
        {   Console.WriteLine("***** Generic Delegates *****\n");
             // Register targets.
  MyGenericDelegate<string> strTarget = new MyGenericDelegate<string>(StringTarget);
            strTarget("Some string data");

            MyGenericDelegate<int> intTarget = new MyGenericDelegate<int>(IntTarget);
            intTarget(9);
            MyGenericDelegate<int> @int = n=> Console.WriteLine("++arg is: {0}", ++n);
            @int(5);
            MyGenericDelegate<string> str = s => Console.WriteLine("string is: {0}", 
                String.Concat(s,"VITA"));
            str("Hello");
            Console.ReadLine();
        }
   static void StringTarget( string arg )
        {     Console.WriteLine("arg in uppercase is: {0}", arg.ToUpper());      }

        static void IntTarget( int arg )
        {           Console.WriteLine("++arg is: {0}", ++arg);       }
    }
}

