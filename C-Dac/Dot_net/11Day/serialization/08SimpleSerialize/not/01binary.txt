using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;



// Gain access to the BinaryFormatter in mscorlib.dll.
using System.Runtime.Serialization.Formatters.Binary;

using System.IO;

namespace SimpleSerialize
{
    #region Types to serialize
   
        
     [Serializable]
      public class employee
    {
        string name;
       int sal;
        public employee() { }//xml require parameterless constructor
        public employee(string nm, int sal)
        {
            Name = nm;
            Salary = sal;
        }
        
        public String Name { get { return name; } set { name = value; } }
         
        public int Salary
        {
            get { return sal; }
            set { sal = value; }
        }

    }

    #endregion

    class Program
    {
        // Be sure to import the System.Xml.Serialization
        // and System.IO namespaces.
        static void Main(string[] args)
        {
            Console.WriteLine("***** Fun with Object Serialization *****\n");
            employee e = new employee();
            
            List<employee > myEmp = new List<employee >();
            myEmp.Add( new employee("raj",7000));
            myEmp.Add( new employee("geeta", 9000));
           


            // Save as SOAP.
            SaveAsBinaryFormat(myEmp, @"..\xmlemp.xml");
           
            string fn = @"..\xmlemp.xml";
           LoadFromFile(fn);


            Console.ReadLine();
        

    }

        #region Save as SOAP
        // Be sure to import System.Runtime.Serialization.Formatters.Soap
        // and reference System.Runtime.Serialization.Formatters.Soap.dll.
        static void SaveAsBinaryFormat(object objGraph, string fileName)
        {
            // Save object to a file named CarData.soap in SOAP format.
            BinaryFormatter binaryFormate = new BinaryFormatter();

            using (Stream fStream = new FileStream(fileName,
              FileMode.Create, FileAccess.Write, FileShare.None))
            {
                binaryFormate.Serialize(fStream, objGraph);
            }
            Console.WriteLine("=> Saved car in SOAP format!");
        }
        #endregion


        static void LoadFromFile(string fn)
        {

            // read object to a file named CarData.soap in SOAP format.
            BinaryFormatter binaryFormat = new BinaryFormatter();
            using (Stream fStream = File.OpenRead(fn))
            {
                List<employee> obj = (List<employee>)binaryFormat.Deserialize(fStream);
                foreach(employee e in obj)
                Console.WriteLine("{0}  {1}", e.Name, e.Salary);
            }

        }
    }
}