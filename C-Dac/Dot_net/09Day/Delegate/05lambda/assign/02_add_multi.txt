using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplication14
{
    delegate int addition();
    class myclass
    {
        public int b;
        public int a;

        public int add()
        {
            return a + b;
        }
        public int mul()
        {
            return a * b;
        }
        public myclass(int a, int b) { this.a = a; this.b = b; }
    }
    class Program
    {
        static void Main(string[] args)
        {
            myclass m = new myclass(6, 6);

            addition d = () => m.a + m.b;
            d += () => m.a * m.b;
            Console.WriteLine(d());
            #region
            //anonymous
           // addition a = delegate() { int mu; mu = m.a * m.b; return mu; };
            //a += delegate() { int mu; mu = m.a * m.b; return mu; }; 
            //Console.WriteLine(a());
            #endregion
            #region
            //deligate
            // addition a = m.add;
            //addition b = m.mul;
            //addition tot = a + b;
            //  int r = tot();
            // Console.WriteLine(r);
            //DisplayDelegateInfo(tot);
            #endregion
            Console.ReadLine();
        }
        static void DisplayDelegateInfo(Delegate delObj)
        {
            // Print the names of each member in the
            // delegate's invocation list.
            foreach (Delegate d in delObj.GetInvocationList())
            {
                Console.WriteLine("Method Name: {0}", d.Method);
                Console.WriteLine("Type Name: {0}", d.Target);
            }
        }

    }
}
