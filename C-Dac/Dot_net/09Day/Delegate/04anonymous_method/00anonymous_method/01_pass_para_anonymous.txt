Pass Arguments to an Anonymous Method
It is possible to pass one or more arguments to an anonymous method. To do so, follow the
delegate keyword with a parenthesized parameter list. Then, pass the argument(s) to the
delegate instance when it is called. For example, here is the preceding program rewritten
so that the ending value for the count is passed:

// Demonstrate an anonymous method that takes an argument.
using System;

// Notice that CountIt now has a parameter.
delegate void CountIt(int end);


class AnonMethDemo2 {
static void Main() {
// Here, the ending value for the count
// is passed to the anonymous method.
	CountIt count = delegate (int end) {
			for(int i=0; i <= end; i++)
			Console.WriteLine(i);
		};
		count(3);
		Console.WriteLine();
		count(5);
		}
	}
In this version, CountIt now takes an integer argument. Notice how the parameter list
is specified after the delegate keyword when the anonymous method is created. The code
inside the anonymous method has access to the parameter end in just the same way it would
if a named method were being created. The output from this program is shown next:
0
1
2
3
0
1
2
3
4
5