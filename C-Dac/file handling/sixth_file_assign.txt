package vardha;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;

/*6) create a class "Car" with some members. ( do not implement "Serializable" for "Car")
Derive a class "Nano" from it. have some members in "Nano" also. (implement "Serializable")
instantiate "Nano" and store this instance in a file. (Serialization).
read the file and read the object of "Nano" .		(Deserialiation) . 
Observe what happens when u serialize a child class.
is it persist ur parent class also ? */

 class Car
{
  String name;
 int number;
}
 class Nano extends Car implements Serializable
{
/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
String model;
String class1;
int modelNo;
Nano(String model,String class1,int modelNo)
{
 this.model=model;
  this.class1=class1;
  this.modelNo=modelNo;
}
}
public class Serial
{
public static void main(String arg[])
{
Nano s=new Nano("super1","ae",889);
try(FileOutputStream fos=new FileOutputStream("d://sourabh.txt"))
{
try(ObjectOutputStream oos=new ObjectOutputStream(fos))
{
oos.writeObject(s);
}
}
catch(Exception e)
{
System.out.println(e);
}
try(FileInputStream fis=new FileInputStream("d://sourabh.txt"))
		{
			try(ObjectInputStream ois=new ObjectInputStream(fis))
			{
				Nano e=(Nano)ois.readObject();
				System.out.println(e.modelNo+ "\t"+e.class1+"\t"+e.model);
				
				
			}
			
			
		}
		catch(Exception e)
		{
			System.out.println(e);
		}
	}
	

}

